{% if HasOperations -%}
{% if GenerateClientInterfaces -%}
{% if ExportTypes %}export {% endif %}interface I{{ Class }} {
{%     for operation in Operations -%}
    {% template Client.Method.Documentation %}
    {{ operation.MethodAccessModifier }}{{ operation.ActualOperationName }}({% for parameter in operation.Parameters %}{{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}{% if parameter.IsLast == false %}, {% endif %}{% endfor %}): Promise<{{ operation.ResultType }}>;
{%     endfor -%}}
{% endif -%}

{% if ExportTypes %}export {% endif %}class {{ Class }} {% if HasBaseClass %}extends {{ BaseClass }} {% endif %}{% if GenerateClientInterfaces %}implements I{{ Class }} {% endif %}{
    // @ts-ignore
    private baseUrl: string = appConfig.apiUrl

{% if HasExtensionCode -%}

    {{ ExtensionCode }}
{% endif -%}
{% for operation in Operations -%}

    {% template Client.Method.Documentation %}
    {{ operation.MethodAccessModifier }}{{ operation.ActualOperationName }}({% for parameter in operation.Parameters %}{{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}{% if parameter.IsLast == false %}, {% endif %}{% endfor %} {% if operation.Parameters.size > 0 %},{%endif%}): Promise<{{ operation.ResultType }}> {
        {% template Client.RequestUrl %}

{%     if operation.IsFile -%}
        //TODO: implement
            responseType: "blob",
{%     endif -%}

{%     if operation.HasBody -%}
          {% template Client.RequestBody %}
{%     endif -%}

        return $fetch<{{ operation.ResultType }}>(url_, 
        {
             baseURL: this.baseUrl,
             method: "{{ operation.HttpMethodUpper | upcase }}",
    {%     if operation.HasBody -%}
             body: JSON.parse(content_),
    {%     endif -%}
             headers: {
    {%     if operation.HasContent or operation.ConsumesFormUrlEncoded -%}
                    "Content-Type": "{{ operation.Consumes }}",
    {%     endif -%}
                Accept: 'application/json',
                'AUTH-TOKEN': apiHelper.token
            }})
    }
{% endfor -%}
}
{% endif -%}